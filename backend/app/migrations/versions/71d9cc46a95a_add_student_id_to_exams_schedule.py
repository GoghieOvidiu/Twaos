"""Add student_id to exams_schedule

Revision ID: 71d9cc46a95a
Revises: 3f44793944a3
Create Date: 2025-06-17 17:05:07.238626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '71d9cc46a95a'
down_revision: Union[str, None] = '3f44793944a3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add column as nullable first
    op.add_column('exams_schedule', sa.Column('student_id', sa.Integer(), nullable=True))
    
    # Create foreign key constraint
    op.create_foreign_key(None, 'exams_schedule', 'users', ['student_id'], ['id'])
    
    # Update existing records with a default student ID (you might want to adjust this)
    op.execute("UPDATE exams_schedule SET student_id = (SELECT id FROM users WHERE role = 'student' LIMIT 1)")
    
    # Make the column not nullable after updating existing records
    op.alter_column('exams_schedule', 'student_id', nullable=False)
    
    # Update user type column
    op.alter_column('users', 'type',
               existing_type=postgresql.ENUM('USER', 'STUDENT', 'TEACHER', name='usertype'),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'type',
               existing_type=sa.String(),
               type_=postgresql.ENUM('USER', 'STUDENT', 'TEACHER', name='usertype'),
               existing_nullable=False)
    op.drop_constraint(None, 'exams_schedule', type_='foreignkey')
    op.drop_column('exams_schedule', 'student_id')
    # ### end Alembic commands ###
